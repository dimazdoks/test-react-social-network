{"version":3,"sources":["hoc/AuthRedirect.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","module","exports","DialogItem","path","id","className","s","dialogsItems","active","src","image","name","Message","message","sender","data","receiver","maxLendth300","maxLengthCreator","AddMessageReduxForm","reduxForm","form","newMessage","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogs","map","d","messagesElements","messages","m","values","addMessage","newMessageBody","compose","newMessageText","dialogsPage","dispatch","text","addMessageActionCreator"],"mappings":"sHAAA,sEAIA,SAASA,EAAwBC,GAC7B,MAAO,CACHC,OAAQD,EAAME,KAAKD,QAIpB,IAAME,EAAmB,SAACC,GAQ7B,OAAOC,YAAQN,EAARM,EAPP,SAA2BC,GACvB,OAAIA,EAAML,OACC,kBAACG,EAAcE,GAEf,kBAAC,IAAD,CAAUC,GAAG,gB,oBCdhCC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,WAAa,8B,oBCAvGD,EAAOC,QAAU,CAAC,aAAe,iCAAiC,OAAS,6B,oBCA3ED,EAAOC,QAAU,CAAC,QAAU,2B,iHCmBbC,MAhBf,SAAoBJ,GAChB,IAAIK,EAAO,WAAaL,EAAMM,GAC9B,OACI,yBAAKC,UAAWC,IAAEC,aAAe,IAAMD,IAAEE,QACrC,kBAAC,IAAD,CAAST,GAAII,GACT,6BACI,yBAAKM,IAAKX,EAAMY,SAEpB,6BACKZ,EAAMa,S,kBCAZC,MAVf,SAAiBd,GACb,OACI,yBAAKO,UAAWC,IAAEO,SACd,yBAAKJ,IAAKX,EAAMgB,SACfhB,EAAMiB,KACP,yBAAKN,IAAKX,EAAMkB,a,iCCwB5B,IAAMC,EAAeC,YAAiB,KAoBhCC,EAAsBC,YAAU,CAAEC,KAAM,cAAlBD,EAlBL,SAAAtB,GACrB,OACE,0BAAMO,UAAWC,IAAEgB,WAAYC,SAAUzB,EAAM0B,cAC7C,6BACE,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GACrBN,KAAM,iBACNmB,YAAY,qBAGhB,6BACE,6CAOOC,EA7Cf,SAAiBjC,GACf,IAAIkC,EAAkBlC,EAAMmC,QAAQC,KAAI,SAAAC,GAAC,OACvC,kBAAC,EAAD,CAAYxB,KAAMwB,EAAExB,KAAMP,GAAI+B,EAAE/B,GAAIM,MAAOyB,EAAEzB,WAE3C0B,EAAmBtC,EAAMuC,SAASH,KAAI,SAAAI,GAAC,OACzC,kBAAC,EAAD,CAASvB,KAAMuB,EAAEzB,QAASC,OAAQwB,EAAExB,OAAQE,SAAUsB,EAAEtB,cAO1D,OACE,yBAAKX,UAAWC,IAAE2B,SAChB,yBAAK5B,UAAWC,IAAEC,cAAeyB,GACjC,yBAAK3B,UAAWC,IAAE+B,UAChB,6BAAMD,GACN,kBAACjB,EAAD,CAAqBI,SATP,SAAAgB,GAClBzC,EAAM0C,WAAWD,EAAOE,sB,wBCKbC,sBACX7C,aAjBJ,SAAyBL,GACrB,MAAO,CACHmD,eAAgBnD,EAAMoD,YAAYD,eAClCV,QAASzC,EAAMoD,YAAYX,QAC3BI,SAAU7C,EAAMoD,YAAYP,aAIpC,SAA4BQ,GACxB,MAAO,CACHL,WAAY,SAACM,GACTD,EAASE,YAAwBD,SAOzCnD,IAFW+C,CAGbX","file":"static/js/4.c32901fe.chunk.js","sourcesContent":["import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nfunction mapStateToPropsRedirect(state) {\n    return {\n        isAuth: state.auth.isAuth\n    };\n}\n\nexport const withAuthRedirect = (Component) => {\n    function RedirectComponent(props) {\n        if (props.isAuth)\n            return <Component {...props}/>;\n        else\n            return <Redirect to='/login' />;\n    }\n\n    return connect(mapStateToPropsRedirect)(RedirectComponent);\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"messages\":\"Dialogs_messages__1w_Up\",\"newMessage\":\"Dialogs_newMessage__1cWkx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItem_dialogsItems__3a0eN\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\"};","import {NavLink} from \"react-router-dom\";\nimport React from \"react\";\nimport s from \"./DialogItem.module.css\"\n\nfunction DialogItem(props) {\n    let path = \"/dialog/\" + props.id;\n    return (\n        <div className={s.dialogsItems + ' ' + s.active}>\n            <NavLink to={path}>\n                <div>\n                    <img src={props.image}/>\n                </div>\n                <div>\n                    {props.name}\n                </div>\n            </NavLink>\n        </div>\n    );\n}\n\nexport default DialogItem;","import s from \"./Message.module.css\";\nimport React from \"react\";\n\nfunction Message(props) {\n    return (\n        <div className={s.message}>\n            <img src={props.sender}/>\n            {props.data}\n            <img src={props.receiver}/>\n        </div>\n    );\n}\n\nexport default Message;","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../common/FormsControls/FormsControl\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validator\";\n\nfunction Dialogs(props) {\n  let dialogsElements = props.dialogs.map(d => (\n    <DialogItem name={d.name} id={d.id} image={d.image} />\n  ));\n  let messagesElements = props.messages.map(m => (\n    <Message data={m.message} sender={m.sender} receiver={m.receiver} />\n  ));\n\n  let addNewMessage = values => {\n    props.addMessage(values.newMessageBody);\n  };\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>{dialogsElements}</div>\n      <div className={s.messages}>\n        <div>{messagesElements}</div>\n        <AddMessageReduxForm onSubmit={addNewMessage} />\n      </div>\n    </div>\n  );\n}\n\n/* add message froms with redux-from */\nconst maxLendth300 = maxLengthCreator(300);\n\nconst AddMessageForm = props => {\n  return (\n    <form className={s.newMessage} onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          validate={[required, maxLendth300]}\n          name={\"newMessageBody\"}\n          placeholder=\"write some text\"\n        />\n      </div>\n      <div>\n        <button>send</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddMessageReduxForm = reduxForm({ form: \"addMessage\" })(AddMessageForm);\nexport default Dialogs;\n","import {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/AuthRedirect\";\nimport {compose} from \"redux\";\n\nfunction mapStateToProps(state) {\n    return {\n        newMessageText: state.dialogsPage.newMessageText,\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addMessage: (text) => {\n            dispatch(addMessageActionCreator(text));\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}